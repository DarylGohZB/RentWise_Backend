version: '3.8'

services:
  rentwiseDB:
    image: mysql:8.0
    container_name: rentwise-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
    command: --port=${DB_PORT:-3306}
    ports:
      # Make mysqld listen on the configured DB_PORT and expose that same port on the host
      - "${DB_PORT:-3306}:${DB_PORT:-3306}"
      - "${DB_PORT:-3306}:${DB_PORT:-3306}"
    volumes:
      - ./mysql/data:/var/lib/mysql
      # Place .sql/.sql.gz/.sh files in ./mysql/schema and they will be executed
      # on container first initialization by the official MySQL image.
      - ./mysql/schema:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  nodejs:
    build:
      context: ./nodejs
      dockerfile: Dockerfile
    image: rentwise-node:latest
    container_name: rentwisesg-nodejs
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV}
      DB_PORT: ${DB_PORT}
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      # Mailgun (used by MailService)
      MAILGUN_API_KEY: ${MAILGUN_API_KEY}
      MAILGUN_DOMAIN: ${MAILGUN_DOMAIN}
      # Redis connection string for OTP/pending registrations
      REDIS_URL: ${REDIS_URL}
      # JWT configuration
      JWT_SECRET: ${JWT_SECRET}
      JWT_TTL: ${JWT_TTL}
      # App port (fallback to 3000 in app.js if not provided)
      PORT: ${PORT}
      
    ports:
      - ${NODEJS_PORT}:${NODEJS_PORT}
    depends_on:
      rentwiseDB:
        condition: service_healthy
    volumes:
      - ./nodejs:/usr/src/app
      - nodejs_node_modules:/usr/src/app/node_modules

  redis:
    image: redis:7.0-alpine
    container_name: rentwise-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  nodejs_node_modules:
    driver: local
  redis_data:
    driver: local